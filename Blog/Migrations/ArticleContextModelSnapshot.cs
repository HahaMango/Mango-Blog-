// <auto-generated />
using System;
using Blog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Migrations
{
    [DbContext(typeof(ArticleContext))]
    partial class ArticleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Blog.Models.ArticleModels.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Categories")
                        .HasColumnType("varchar(120)");

                    b.Property<int>("Comments");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("IsOriginal");

                    b.Property<int>("Like");

                    b.Property<string>("PageId")
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Reads");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(12)");

                    b.Property<int>("WordCount");

                    b.HasKey("Id");

                    b.HasIndex("PageId")
                        .IsUnique();

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Blog.Models.ArticleModels.ArticleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Userid")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.ToTable("ArticleCategories");
                });

            modelBuilder.Entity("Blog.Models.ArticleModels.ArticleContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("PageContentId")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("PageId")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("PageContentId", "PageId")
                        .IsUnique();

                    b.ToTable("ArticleContents");
                });

            modelBuilder.Entity("Blog.Models.ArticleModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentId")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsReply");

                    b.Property<int>("Like");

                    b.Property<string>("PageId")
                        .HasColumnType("varchar(12)");

                    b.Property<int>("ReplyComId");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("CommentId")
                        .IsUnique();

                    b.ToTable("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
