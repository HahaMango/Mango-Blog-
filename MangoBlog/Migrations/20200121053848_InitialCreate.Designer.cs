// <auto-generated />
using System;
using MangoBlog.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MangoBlog.Migrations
{
    [DbContext(typeof(MangoBlogDBContext))]
    [Migration("20200121053848_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MangoBlog.Entity.ArticleContentEnttiy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("ContentType")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId")
                        .IsUnique();

                    b.ToTable("ArticleContents");
                });

            modelBuilder.Entity("MangoBlog.Entity.ArticleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<int>("Comment");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Describe")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Like");

                    b.Property<int>("Read");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("MangoBlog.Entity.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MangoBlog.Entity.CommentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MangoBlog.Entity.ArticleContentEnttiy", b =>
                {
                    b.HasOne("MangoBlog.Entity.ArticleEntity", "ArticleEntity")
                        .WithOne("ArticleContent")
                        .HasForeignKey("MangoBlog.Entity.ArticleContentEnttiy", "ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MangoBlog.Entity.ArticleEntity", b =>
                {
                    b.HasOne("MangoBlog.Entity.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MangoBlog.Entity.CommentEntity", b =>
                {
                    b.HasOne("MangoBlog.Entity.ArticleEntity")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
